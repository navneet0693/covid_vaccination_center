<?php

/**
 * @file
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\slot_booking_customizations\CovidCenterNodeForm;
use Drupal\taxonomy\Entity\Term;
use Drupal\taxonomy\TermInterface;
use Drupal\user\Entity\User;
use Drupal\user\UserInterface;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_views_pre_build().
 */
function slot_booking_customizations_views_pre_build(ViewExecutable $view) {
  // Modify contextual filters for 'frontpage' view if the user is
  // authenticated.
  // This is done in order to filter the results on the home page.
  // The results should be filtered on the basis of current users.
  // @todo: Fix the exclusion of current term ID from results.
  // @todo: This breaks the exclusion which is set in contextual filter
  // @todo: in the views 'other_cities'.
  $account = \Drupal::currentUser();
  if ($view->id() == 'other_cities'
    && $view->current_display == 'other_cities'
    && $account->isAuthenticated()
  ) {
    // Let's load the full user entity object.
    $user = User::load(\Drupal::currentUser()->id());
    // Check if the above statement has returned a valid object.
    // Check if the user object has field_city available.
    // Check if the city field has a value.
    if ($user instanceof UserInterface
      && $user->hasField('field_city')
      && !$user->get('field_city')->isEmpty()
    ) {
      // Get the field value.
      $city = $user->get('field_city')->getValue();

      // Get the term ID.
      $term_id = $city[0]['target_id'];

      // Load the term object.
      $term = Term::load($term_id);
      if ($term instanceof TermInterface) {
        // Prepare the argument.
        $args[0] = $term->getName();
        // Set the arguments.
        $view->setArguments($args);
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function slot_booking_customizations_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // The exposed form block contains 'Apply' button on search box.
  // This is caused due to better exposed filters and there is no option
  // in the better exposed filter settings in the view to remove this button.
  // Since, we are using search autocomplete, and it provides auto submit
  // property we don't need that action button.
  // Let's unset that action from the form.
  if ($form['#id'] === 'views-exposed-form-all-covid-center-all-covid-centers') {
    unset($form['actions']);
  }
}

/**
 * Implements hook_entity_type_alter().
 */
function slot_booking_customizations_entity_type_alter(array &$entity_types) {
  if (isset($entity_types['node'])
  ) {
    foreach (['default', 'edit'] as $operation) {
      // We want to customize the add/edit form for covid center.
      // This will help altering slot bookings and field_registered users.
      // Important: Please note that it is not possible change the NodeForm
      // as per bundle. So, we are doing it for whole Node entity type.
      // We are limiting the further processing in the CovidCenterNodeForm
      // itself.
      // @see CovidCenterNodeForm::class.
      $entity_types['node']->setFormClass($operation, CovidCenterNodeForm::class);
    }
  }
}
